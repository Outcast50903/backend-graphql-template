// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String    @default(uuid()) @id
  email     String    @unique 
  password  String?   
  fullName  String?   @db.VarChar(50)
  roles     Role[]    @default([USER])
  image     String?   

  createdAt DateTime  @default(now())
  updatedAt DateTime? 
  deleteAt  DateTime? 
  isEnabled Boolean   @default(true)

  accounts  Accounts[]
  session   Session[]
  logger    Logger[]
}

model Accounts {
  id               String    @default(uuid()) @id
  userId           String    @db.VarChar(50)
  type             String    @db.VarChar(50)
  provider         String    @db.VarChar(50)
  providerAccountId String    @db.VarChar(50)
  refresh_token    String?   @db.VarChar(50)
  access_token     String?   @db.VarChar(50)
  expires_at       Int?      @db.Integer
  token_type       String?   @db.VarChar(50)
  scope            String?   @db.VarChar(50)
  id_token         String?   @db.VarChar(50)
  session_state    String?   @db.VarChar(50)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? 
  deleteAt         DateTime? 
  isEnabled        Boolean   @default(true)

  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Session {
  sessionToken String   @id
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Logger {
  id        String    @default(uuid()) @id
  userId    String    @db.VarChar(50)
  type      String    @db.VarChar(50)
  message   String    @db.VarChar(255)
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
}